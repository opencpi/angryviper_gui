<?xml version="1.0" encoding="UTF-8"?>
<!--
   - This file is protected by Copyright. Please refer to the COPYRIGHT file
   - distributed with this source distribution.
   -
   - This file is part of OpenCPI <http://www.opencpi.org>
   -
   - OpenCPI is free software: you can redistribute it and/or modify it under
   - the terms of the GNU Lesser General Public License as published by the Free
   - Software Foundation, either version 3 of the License, or (at your option)
   - any later version.
   -
   - OpenCPI is distributed in the hope that it will be useful, but WITHOUT ANY
   - WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   - FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
   - more details.
   -
   - You should have received a copy of the GNU Lesser General Public License
   - along with this program. If not, see <http://www.gnu.org/licenses/>.
-->

<definition>
    <editor-page>
        <id>OCSEditorPage</id>
        <element-type>av.proj.ide.ocs.ComponentSpec</element-type>
        <page-header-text>OCS Editor</page-header-text>
        <initial-selection>ComponentSpec</initial-selection>
        <root-node>
            <node>
                <label>ComponentSpec</label>
                <section>
                    <label>Component Specification</label>
                    <description>An OpenCPI component is a functional abstraction with a specifically defined control and configuration interface based on configuration properties, and zero or more data interfaces (ports), each with a defined messaging protocol. The OpenCPI Component Specification (OCS) defines these aspects of a component establishing the interface requirements for an implementing worker.</description>
					<!--
						======================================================================
						Component Summary Panel
					 -->
                    <content>
                        <section>
                            <label>Summary View</label>
                            <content>
                                 
                                <section>
                                    <label>Advanced Attributes</label>
                                    <description>Typically the default name for a component is used (derived from this file name). A specific name can be used. The NoControl flag indicates a component with no lifecycle/configuration interface. This is typically not allowed for application components.</description>
		                    		<content>
		                    			<property-editor>Name</property-editor>
				                    	<property-editor>
				                    		<property>NoControl</property>
				                    		<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
				                    		<hint>
				                    			<name>checkbox.layout</name>
				                    			<value>leading.label</value>
				                    		</hint>
				                    	</property-editor>
		                    		</content>
                                    <collapsible>true</collapsible>
                                    <collapsed-initially>true</collapsed-initially>
                                </section>
                                 
                                <section>
                                    <label>Component Properties</label>
                                    <description>Component properties define component configuration and control. The specification may also use a common set of properties supplied in a file inclusion. Note that property definitions and the inclusion of other properties are order dependent.</description>
                                    <content>
		                                <split-form>
		                                    <block>
		                                        <content>
		                                            <section>
		                                                <content>
		                                                    <property-editor>
																<property>ComponentSpecProperties</property>
																<child-property>Name</child-property>
																<child-property>Type</child-property>
                                                                <show-label>false</show-label>
		                                                    </property-editor>
		                                                </content>
		                                                <label>Component Property List</label>
		                                            </section>
		                                        </content>
		                                    </block>
		                                    <block>
		                                        <content>
		                                            <section>
		                                                <content>
                                                            <property-editor>
                                                                <show-label>false</show-label>
                                                                <property>Includes</property>
                                                            </property-editor>
		                                                </content>
		                                                <label>Include Property Files</label>
		                                            </section>
		                                        </content>
		                                    </block>
		                                </split-form>
                                    </content>
                                    <collapsible>true</collapsible>
                                </section>
                                <section>
                                    <label>Port Definitions</label>
                                    <description>Define the in-bound and out-bound ports for the component.</description>
		                    		<content>
	                                    <property-editor>
										<property>Ports</property>
										<child-property>Name</child-property>
										<child-property>Protocol</child-property>
										<child-property>Optional</child-property>
										<child-property>Producer</child-property>
										<child-property>NumberOfOpCodes</child-property>
                                        <show-label>false</show-label>
	                                    </property-editor>
		                    		</content>
                                    <collapsible>true</collapsible>
                                </section>
                                
                             </content>
                        </section>
                    </content>
					<!--
						Protocol Summary Panel
						======================================================================
					 -->

                </section>

				<node>
                    <label>Component Properties</label>
                    <section>
                        <label>Component Properties</label>
                        <content>
                            <actuator>
                                <action-id>Sapphire.Add</action-id>
                                <label>Add a Property</label>
                            </actuator>
                            <include>PropertiesView</include>
                        </content>
                    </section>
	
	               	<node-factory>
	               		<property>ComponentSpecProperties</property>
	               		<case>
	               			<label>${ Name == null ? "&lt;property&gt;" : Name }</label>
	               			<section>
	               				<label>Property</label>
	               				<description>In OPS XML, messages are called operations, and fields of messages are called arguments. This terminology is based on Remote Procedure Call (RPC), or Remote Method Invocation (RMI), model of communications.</description>
	               				<content>
	               					<actuator>
		               					<action-id>Sapphire.Add</action-id>
		               					<label>Add a Property</label>
		               				</actuator>
	                                <include>PropertyForm</include>
	               				</content>
	               			</section>
	               					
	               					<node-factory>
		            					<property>Members</property>
		            					<case>
		               						<label>${ Name == null ? "&lt;member&gt;" : Name }</label>
		               						<section>
		               							<label>Member</label>
		               							<description>Modify attributes of this member.</description>
		               							<content>
		               								<actuator>
						               					<action-id>Sapphire.Add</action-id>
						               					<label>Add a Member</label>
						               				</actuator>
	                                        		<include>MemberForm</include>
		               							</content>
		               						</section>
		               						<node-factory>
		               							<property>Members</property>
		               							<case>
		               								<label>${ Name == null ? "&lt;member&gt;" : Name }</label>
					               					<section>
					               						<label>Member</label>
					               						<description>Modify attributes of this member.</description>
					               						<content>
	                                        				<include>MemberForm</include>
					               						</content>
					               					</section>
		               							</case>
		               							<visible-when>${ Type == &quot;struct&quot; }</visible-when>
		               						</node-factory>
		               					</case>
		               					<visible-when>${ Type == &quot;struct&quot; }</visible-when>
		            				</node-factory>
	               			
	               		</case>
	               	</node-factory>
	
                </node>
                <node>
                    <label>Ports</label>
                </node>
                
            </node>
        
        </root-node>
        <page-name>OCS</page-name>
    </editor-page>
    
    <form>
        <id>PropertyForm</id>
		 <content>
			<include>MemberAttributesForm</include>
			
			<property-editor>
				<property>Parameter</property>
				<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
				<hint>
					<name>checkbox.layout</name>
					<value>leading.label</value>
				</hint>
			</property-editor>
			
			<property-editor>
				<property>Members</property>
				<child-property>Name</child-property>
				<child-property>Type</child-property>
                <visible-when>${ Type == &quot;struct&quot; }</visible-when>
			</property-editor>
			
			<section>
				<label>Decorated Parameter</label>
				<content>
					<property-editor>
						<property>Readable</property>
						<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
						<hint>
							<name>checkbox.layout</name>
							<value>leading.label</value>
						</hint>
					</property-editor>
				</content>
                <visible-when>${Parameter != null}</visible-when>
                <description>A parameter is a build-time constant. It may b augmented with readable accessibility that might change how a worker will see it.</description>
			</section>
			
			<section>
				<label>Accessibility</label>
				<content>
                    <property-editor>
                        <hint>
                            <name>checkbox.layout</name>
                            <value>leading.label</value>
                        </hint>
                        <property>Writable</property>
                        <style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
                    </property-editor>
					<property-editor>
						<property>Readable</property>
						<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
						<hint>
							<name>checkbox.layout</name>
							<value>leading.label</value>
						</hint>
					</property-editor>
                    <property-editor>
                        <hint>
                            <name>checkbox.layout</name>
                            <value>leading.label</value>
                        </hint>
                        <property>Initial</property>
                        <style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
                    </property-editor>
					<property-editor>
						<property>Volatile</property>
						<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
						<hint>
							<name>checkbox.layout</name>
							<value>leading.label</value>
						</hint>
					</property-editor>              								
				</content>
                <visible-when>${Parameter == null }</visible-when>
			</section>
			
       </content>
    </form>

	<form>
		<id>PropertiesView</id>
		<content>

			<section>
				<label>Component Properties</label>
				<content>
				
					<property-editor>
						<property>ComponentSpecProperties</property>
						<child-property>Name</child-property>
						<child-property>Type</child-property>
						<child-property>SequenceLength</child-property>
						<child-property>
							<visible-when>${ ArrayDimensions == null }</visible-when>
							<property>ArrayLength</property>
						</child-property>
						<child-property>
							<visible-when>${ ArrayLength == null }</visible-when>
							<property>ArrayDimensions</property>
						</child-property>
					</property-editor>
					
					<detail-section>
						<property>ComponentSpecProperties</property>
						<case>
							<element-type>av.proj.ide.ocs.Property</element-type>
							<content>
								<section>
									<label>Property Details</label>
									<content>
										<include>PropertyForm</include>
									</content>
								</section>
							</content>
						</case>
					</detail-section>

				</content>
			</section>

		</content>
	</form>
	
    <form>
        <id>MemberForm</id>
		 <content>
			<include>MemberAttributesForm</include>
			<property-editor>
				<property>Members</property>
				<child-property>Name</child-property>
				<child-property>Type</child-property>
                <visible-when>${ Type == &quot;struct&quot; }</visible-when>
			</property-editor>
			
       </content>
    </form>
    
    <form>
        <id>MemberAttributesForm</id>
		 <content>
			<property-editor>Name</property-editor>
			<property-editor>Type</property-editor>
			<property-editor>
				<visible-when>${ Type == &quot;string&quot; }</visible-when>
				<property>StringLength</property>
			</property-editor>
			<property-editor>
				<visible-when>${ Type == &quot;enum&quot; }</visible-when>
				<property>Enums</property>
			</property-editor>
			<property-editor>SequenceLength</property-editor>
			<property-editor>ArrayLength</property-editor>
			<property-editor>ArrayDimensions</property-editor>
			
       </content>
    </form>
	
	
</definition>